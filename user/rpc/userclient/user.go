// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package userclient

import (
	"context"

	"rpc/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	UInfoRequest      = user.UInfoRequest
	UInfoResponse     = user.UInfoResponse
	ULoginRequest     = user.ULoginRequest
	ULoginResponse    = user.ULoginResponse
	URegisterRequest  = user.URegisterRequest
	URegisterResponse = user.URegisterResponse
	User              = user.User

	UserZrpcClient interface {
		// Login 用户登录
		Login(ctx context.Context, in *ULoginRequest, opts ...grpc.CallOption) (*ULoginResponse, error)
		// Register 用户注册
		Register(ctx context.Context, in *URegisterRequest, opts ...grpc.CallOption) (*URegisterResponse, error)
		// GetUserInfo 获取用户信息
		GetUserInfo(ctx context.Context, in *UInfoRequest, opts ...grpc.CallOption) (*UInfoResponse, error)
	}

	defaultUserZrpcClient struct {
		cli zrpc.Client
	}
)

func NewUserZrpcClient(cli zrpc.Client) UserZrpcClient {
	return &defaultUserZrpcClient{
		cli: cli,
	}
}

// Login 用户登录
func (m *defaultUserZrpcClient) Login(ctx context.Context, in *ULoginRequest, opts ...grpc.CallOption) (*ULoginResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}

// Register 用户注册
func (m *defaultUserZrpcClient) Register(ctx context.Context, in *URegisterRequest, opts ...grpc.CallOption) (*URegisterResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}

// GetUserInfo 获取用户信息
func (m *defaultUserZrpcClient) GetUserInfo(ctx context.Context, in *UInfoRequest, opts ...grpc.CallOption) (*UInfoResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetUserInfo(ctx, in, opts...)
}
